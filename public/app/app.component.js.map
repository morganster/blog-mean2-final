{"version":3,"sources":["/src/app.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA0C;AAC1C,mDAAiD;AACjD,uDAAqD;AACrD,0CAAyC;AACzC,wCAAmE;AAYnE,IAAa,YAAY;IACvB,sBAAoB,YAA0B,EAAS,UAAqB,EAAU,MAAa,EAAQ,EAAc;QAArG,iBAAY,GAAZ,YAAY,CAAc;QAAS,eAAU,GAAV,UAAU,CAAW;QAAU,WAAM,GAAN,MAAM,CAAO;QAAQ,OAAE,GAAF,EAAE,CAAY;QAIlH,cAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,QAAQ,EAAC,CAAC,EAAE,EAAC,kBAAU,CAAC,QAAQ,CAAC;YACjC,QAAQ,EAAC,CAAC,EAAE,EAAC,kBAAU,CAAC,QAAQ,CAAC;SAClC,CAAC,CAAC;QACH,kBAAa,GAAG,KAAK,CAAC;IARqG,CAAC;IAS7H,sDAAsD;IACrD,6BAAM,GAAN,UAAO,KAAK;QAEV,EAAE,CAAA,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAA,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,4BAAK,GAAL,UAAM,KAAK;QAAX,iBAeC;QAdA,sBAAsB;QACtB,8CAA8C;QAC7C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5F,UAAA,MAAM;YACN,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9B,CAAC;YAAA,IAAI,CAAA,CAAC;gBACJ,KAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC;YACxC,CAAC;QACH,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CACtC,CAAC;IACJ,CAAC;IACD,gCAAS,GAAT;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IACH,mBAAC;AAAD,CArCA,AAqCC,IAAA;AArCY,YAAY;IANxB,gBAAS,CAAC;QACT,QAAQ,EAAE,QAAQ;QAClB,WAAW,EAAE,iCAAiC;QAC9C,SAAS,EAAC,CAAC,4BAAY,EAAC,wBAAU,CAAC;KAEpC,CAAC;qCAEkC,4BAAY,EAAoB,wBAAU,EAAiB,eAAM,EAAW,mBAAW;GAD9G,YAAY,CAqCxB;AArCY,oCAAY","file":"app.component.js","sourcesContent":["import { Component } from '@angular/core';\nimport { LoginGuard } from './login/login.guard';\nimport { LoginService } from './login/login.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\n\n\n\n\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './public/app/app.component.html',\n  providers:[LoginService,LoginGuard]\n\n})\nexport class AppComponent  { \n  constructor(private loginService: LoginService,private loginGuard:LoginGuard, private router:Router,public fb:FormBuilder){}\n  \n  errorMessage :string;\n\n  public loginForm = this.fb.group({\n    username:[\"\",Validators.required],\n    password:[\"\",Validators.required]\n  });\n  showLoginForm = false;\n // public logEvent :EventEmitter = new EventEmitter();\n  logout(event){\n    \n    if(this.loginService.logout()){\n      this.router.navigate(['/']);\n    }\n  }\n  \n  login(event){\n   // console.log(event);\n   // console.log(this.loginForm.value.username);\n    this.loginService.login(this.loginForm.value.username,this.loginForm.value.password).subscribe(\n      result => {\n      console.log(result);\n      if (result) {\n        this.showLoginForm = false;\n        this.router.navigate(['/']);\n      }else{\n        this.errorMessage = \"bad credentials\";\n      }\n    },\n    error => this.errorMessage = <any>error\n    );\n  }\n  showLogin(){\n    this.showLoginForm = true;\n  }\n}\n"]}